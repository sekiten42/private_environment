set number
syntax on
set tabstop=4
set mouse=a
set autoindent
set smartindent

:colorscheme ron

inoremap{ {}<LEFT>
inoremap( ()<LEFT>
inoremap[ []<LEFT>
inoremap" ""<LEFT>
inoremap' ''<LEFT>

function! DeleteParenthesesAdjoin()
    let pos = col(".") - 1  " カーソルの位置．1からカウント
    let str = getline(".")  " カーソル行の文字列
    let parenLList = ["(", "[", "{", "\'", "\""]
    let parenRList = [")", "]", "}", "\'", "\""]
    let cnt = 0

    let output = ""

    " カーソルが行末の場合
    if pos == strlen(str)
        return "\b"
    endif
    for c in parenLList
        " カーソルの左右が同種の括弧
        if str[pos-1] == c && str[pos] == parenRList[cnt]
            call cursor(line("."), pos + 2)
            let output = "\b"
            break
        endif
        let cnt += 1
    endfor
    return output."\b"
endfunction
" BackSpaceに割り当て
inoremap <silent> <BS> <C-R>=DeleteParenthesesAdjoin()<CR>

function! InsDedupParen(closer)
	let cur_ch = getline('.')[col('.')-1]
	let parenRList = ["}", ")", "]", "\"", "\'"]
	let paren_index = index(parenRList, cur_ch)
	if paren_index >= 0 && parenRList[paren_index] == a:closer
		return "\<C-O>a"
	endif
	return a:closer
endfunction

inoremap <silent> ) <C-R>=InsDedupParen(')')<CR>
inoremap <silent> ] <C-R>=InsDedupParen(']')<CR>
inoremap <silent> } <C-R>=InsDedupParen('}')<CR>
